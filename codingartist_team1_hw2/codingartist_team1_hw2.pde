// 2024 2학기 코딩하는 아티스트 1조 HW2
// 조에서 상의하고 설정한 미션: 3개의 캐릭터가 각각 K, H, U 를 반복적으로 쓰게 하기
// 교수님께서 내주신 미션도 수행하기

//// 조 미션용 변수들
// K, H, U x좌표 y좌표 변수
float x_k, x_h, x_u, y_k, y_h, y_u;
// 캐릭터 1, 2, 3 크기 비율 1
float d_1, d_2, d_3;
// switch case 용 변수
int case_k, case_h, case_u;
// case_u == 2 에서 cos() 연산 안에 들어가는 용도
float t;

//// 교수님 미션용 변수들
// 3개의 캐릭터
float x_1,x_2,x_3,y_1,y_2,y_3;
// 캐릭터 1, 2, 3 크기 비율 2
float d_4, d_5, d_6;
// 움직이는 속도;
float vx1, vx2, vx3, vy1, vy2, vy3;

//// void setup() 함수는 코드를 젤 처음 시작할때, 딱 한번만 작동하는 함수다. 즉 초기 세팅값들을 여기서 설정해주면 된다.
void setup(){
  size(1000, 500);  // 창 크기를 설정해준다
  
// 캐릭터 크기 비율 설정
  d_1 = 0.5;  d_2 = 0.8;  d_3 = 1;
  d_4 = 0.1;  d_5 = 0.2;  d_6 = 0.5;

// switch case 변수 초기화 // 여기서 제일 처음에 KHU 캐릭터가 움직이기 시작할 x, y 값을 설정해준다. 
  case_k = 1;  x_k = 150; y_k = 100;
  case_h = 1;  x_h = 400; y_h = 100;
  case_u = 1;  x_u = 700; y_u = 150;
  
// 교수님 미션용 x, y 값들 시작 위치 선정 && 속도 설정
  x_1 = 100;  x_2 = 400;  x_3 = 700;
  y_1 = 250;  y_2 = 490;  y_3 = 10;
  vx1 = 10;   vx2 = 5;    vx3 = 7;
  vy1 = 5;    vy2 = 10;   vy3 = 4;
}

//// void draw() 함수는 코드를 작동하면 1초에 60번 무한 반복하는 코드이다.
void draw(){
  background(255);  // 캐릭터 중첩을 막기 위해 계속 초기화해준다.
  drawKHU();  //  배경에 KHU문자를 그린다.
  drawK();    // K를 그린다.
  drawH();    // H를 그린다.
  drawU();    // U를 그린다.
  Mission();   // 교수님이 내주신 미션을 수행하는 3개의 캐릭터들을 그린다.
}

//// K가 그려질 x_k, y_k 좌표값을 계속 갱신해주고 그림을 그리는 함수이다.
void drawK(){
  if (case_k ==1) { 
    y_k +=5;
    if(x_k>=150 && y_k >= 400){
      x_k = 250; 
      y_k = 150;
      case_k = 2;
    }
  } else if (case_k == 2) {
    x_k -= 5;
    y_k += 5 ;
    if (x_k == 150 && y_k == 250){
      x_k = 150; 
      y_k = 250 ;
      case_k = 3;
   }
  } else if (case_k ==3) {
    x_k += 5 ;
    y_k += 5 ;
    if (x_k ==250 && y_k ==350){
      x_k = 150;
      y_k = 100;
      case_k = 1;
    }
  }
  drawzzanggu(x_k, y_k, d_1) ;
}

//// H가 그려질 x_h, y_h 좌표값을 계속 갱신해주고 그림을 그리는 함수이다.
void drawH(){
  if (case_h == 1) {                  // case_h = 1 : H 처음 그을때 좌측 위에서 아래로 그어준다
    y_h += 5;                         // H 라 처음에 아래로 직진
    if (x_h == 400 && y_h == 400){    // 정해준 좌표에 도착했다면
      x_h = 400; y_h = 250;           // 다음 획을 그어줄 첨 위치로 좌표를 바꿔주고
      case_h = 2;                     // 다음 획을 긋도록 case_h 를 바꿔준다
    }
  } else if (case_h == 2) {           // case_h = 2 : H 두번째 획 그을때 좌측에서 우측으로 옆으로 그어준다
    x_h += 5;                         // x좌표 옆으로 직진
    if (x_h == 600 && y_h == 250){    // 끝에 도달했다면
      x_h = 600; y_h = 100;           // 다음 획을 그어줄 첨 위치로 좌표를 바꿔주고
      case_h = 3;                     // 다음 획을 긋도록 case_h 를 바꿔준다
    }
  } else if (case_h == 3) {           // case_h = 3 : H 마지막 획 그을때 우측 위에서 아래로 그어준다
    y_h += 5;                         // 아래로 직진
    if (x_h == 600 && y_h == 400){    // 끝에 도달했다면
      x_h = 400; y_h = 100;           // 다시 처음 위치로 좌표를 바꿔주고
      case_h = 1;                     // case_h 도 다시 처음 1부터 하도록 바꿔준다.
    }
  }
  
  drawPig(x_h, y_h, d_2); //// 위에서 정해진 x_h값과 y_h 값을 바탕으로 종호가 hw1때 만든 함수를 불러와서 돼지 그림을 한번 그린다.
  
}

//// U가 그려질 x_u, y_u 좌표값을 계속 갱신해주고 그림을 그리는 함수이다.
void drawU(){
  if (case_u == 1) {
    y_u += 5; // 아래쪽으로 이동
    if (y_u == 350){
      x_u = 700; y_u = 350;
      case_u = 2;
    }
  } else if (case_u == 2) {
    t += PI/40; // t의 값은 1/60초마다 PI/40씩 증가합니다.
    x_u += 5*PI/2*sin(t); // x_u의 값은 2/3초 동안 200만큼 증가합니다.
    y_u += 5*cos(t); // y_u의 값은 2/3초 동안 350에서 증가했다가 다시 350으로 감소합니다.
    if (y_u == 350){
      t = 0;
      x_u = 900; y_u = 350;
      case_u = 3;
    }
  } else if (case_u == 3) {
    y_u -= 5; // 위쪽으로 이동
    if (y_u == 150){
      x_u = 700; y_u = 150;
      case_u = 1;
    }
  }  
  awesome_face(x_u,y_u,d_3);
}

//// 배경에다가 빨간글씨로 KHU 새긴다
void drawKHU() {
  ////k
  fill(255, 0, 0);
  stroke (255, 0, 0);
  quad(120, 100, 180, 100, 180, 400, 120, 400);
  quad(280, 130, 320, 170, 180, 250, 140, 210);
  quad(140, 290, 180, 250, 320, 330, 280, 370);

  ////h
  fill(255, 0, 0);
  stroke (255, 0, 0);
  quad(370, 100, 430, 100, 430, 400, 370, 400);
  quad(400, 280, 400, 220, 600, 220, 600, 280);
  quad(570, 100, 630, 100, 630, 400, 570, 400);
  
  ////u
  fill(255,0,0);
  stroke(255,0,0);
  quad(670,100,730,100,730,350,670,350);
  arc(800,350,260,200,0,PI);
  quad(870,100,930,100,930,350,870,350);
  fill(255);
  stroke(255);
  arc(800,350,138,100,0,PI);
}

//// 추가로 내주신 미션
void Mission(){
  x_1 += vx1;  y_1 += vy1;
  x_2 += vx2;  y_2 += vy2;
  x_3 += vx3;  y_3 += vy3;
  if(x_1 < 0 || x_1 > width) vx1 = -vx1;
  if(x_2 < 0 || x_2 > width) vx2 = -vx2;
  if(x_3 < 0 || x_3 > width) vx3 = -vx3;
  if(y_1 < 0 || y_1 > height) vy1 = -vy1;
  if(y_2 < 0 || y_2 > height) vy2 = -vy2;
  if(y_3 < 0 || y_3 > height) vy3 = -vy3;
  drawPig(x_1,y_1,d_5);
  awesome_face(x_2,y_2,d_6);
  drawzzanggu(x_3,y_3,d_4);
}
