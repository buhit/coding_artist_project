// 2024 2학기 코딩하는 아티스트 1조 HW11

// 구현한 게임 : 타겟 슈팅 게임

/* 기능 설명
-- 기존 기능 HW10 --
01. 화면의 사이즈는 (800,600)
02. 게임을 시작하면 원하는 타겟의 수를 입력할 수 있다. 이 타겟들은 벽과 튕기면서 움직인다.
03. 타겟의 수가 많을수록 이 타겟들의 크기는 작아진다.
04. 타겟의 수를 입력하면 본격적으로 게임을 시작한다. 그럼 n개의 타겟이 화면에서 랜덤한 위치에서 spawn이 되고 움직인다. 
05. 이 타겟들이 움직이는 속도인 vx와 vy도 일정하지 않고 랜덤하지만 절대 속도는 크기에 비례한다. 타겟이 작을 수록 느리게 움직인다.
06. player는 화면 하단 부분에서 키보드로 a,d를 눌러서 좌우로 움직일 수 있다.
07. player는 그리고 총알을 쏠 수 있다. 한 화면에 최대 5개까지만 존재 할 수 있고, 총을 쏘는 데는 시간 간격이 있다.
08. player는 화면속에 마우스를 클릭하면 그 지점 방향으로 총알을 발사한다.
09. 돌아다니는 타겟은 총알과 맞으면 타겟과 총알이 동시에 사라진다.
10. 모든 타겟을 다 맞추면 게임은 종료되고, 총 걸리는 시간이 표시된다.
11. 게임이 종료되야 다시 시작할 수 있고, 다시 시작하려면 'r' 키를 눌러야한다.

-- 추가한 기능 HW11 --
12. 타겟의 클래스를 상속하는 자식 타겟 클래스를 3개 추가했다.
13. 자식 타겟 클래스는 서로 다른 눈 색깔을 가진다. (핑크, 하늘, 노랑)
14. 총 3종류의 자식 타겟은 서로 다른 수명을 가지고 있다. (핑크 1개, 하늘 2개, 노랑 3개)
15. 각 타겟마다 중앙에 남은 수명 숫자를 표시해주고, 총알을 하나씩 맞을 때마다 감소한다.
16. 수명이 0이 되면 사라진다.
17. 타겟의 총 숫자를 입력받으면, 랜덤한 숫자의 조합으로 자식 타겟들이 생성된다.
*/


Game game;

void setup() {
  size(800, 600);
  game = new Game();
}

void draw() {
  background(255);
  game.update();
  game.display();
}

// 키 입력 처리
void keyPressed() {
  game.handleKeyPress();
}

// 마우스 클릭으로 총알 발사
void mousePressed() {
  game.handleMousePress();
}
